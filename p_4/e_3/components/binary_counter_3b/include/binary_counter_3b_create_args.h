#ifndef __BINARY_COUNTER_3B_CREATE_ARGS_H__
#define __BINARY_COUNTER_3B_CREATE_ARGS_H__

// include ESP GPIO
#include "driver/gpio.h"

// DEFAULT ARGS [MENUCONFIG] //
#define BINARY_COUNTER_3B_DEFAULT_NAME          CONFIG_BINARY_COUNTER_3B_DEFAULT_NAME
#define BINARY_COUNTER_3B_DEFAULT_BIT0_GPIO     CONFIG_BINARY_COUNTER_3B_DEFAULT_BIT0_GPIO
#define BINARY_COUNTER_3B_DEFAULT_BIT1_GPIO     CONFIG_BINARY_COUNTER_3B_DEFAULT_BIT1_GPIO
#define BINARY_COUNTER_3B_DEFAULT_BIT2_GPIO     CONFIG_BINARY_COUNTER_3B_DEFAULT_BIT2_GPIO
#define BINARY_COUNTER_3B_DEFAULT_INITIAL_VALUE CONFIG_BINARY_COUNTER_3B_DEFAULT_INITIAL_VALUE



// CREATE ARGS //
typedef struct binary_counter_3b_create_args {
    const char *name;
    gpio_num_t bit0_gpio;
    gpio_num_t bit1_gpio;
    gpio_num_t bit2_gpio;
    uint8_t initial_value;
} binary_counter_3b_create_args_t;


// DEFAULT MACRO //
#define BINARY_COUNTER_3B_CREATE_ARGS_DEFAULT() { \
    .name = BINARY_COUNTER_3B_DEFAULT_NAME, \
    .bit0_gpio = BINARY_COUNTER_3B_DEFAULT_BIT0_GPIO, \
    .bit1_gpio = BINARY_COUNTER_3B_DEFAULT_BIT1_GPIO, \
    .bit2_gpio = BINARY_COUNTER_3B_DEFAULT_BIT2_GPIO, \
    .initial_value = BINARY_COUNTER_3B_DEFAULT_INITIAL_VALUE, \
}

#endif // __BINARY_COUNTER_3B_CREATE_ARGS_H__